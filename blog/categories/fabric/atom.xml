<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id></id>
    <title>fabric | Matthew Daly&apos;s Blog</title>
    <updated>2017-09-25T21:19:35Z</updated>
    <generator>grunt-blogbuilder https://github.com/matthewbdaly/grunt-blogbuilder</generator>
    <author>
        <name>Matthew Daly</name>
        <email>matthew@matthewdaly.co.uk</email>
        <uri>https://matthewdaly.co.uk</uri>
    </author>
    <link rel="alternate" href="https://matthewdaly.co.uk/blog/categories/fabric/"/>
    <subtitle>fabric | I&apos;m a web developer in Norfolk. This is my blog...</subtitle>
    <rights>Matthew Daly 2017</rights>
    <entry>
        <title type="html"><![CDATA[Deploying new versions of a Laravel app with Fabric]]></title>
        <id>https://matthewdaly.co.uk/blog/2016/09/05/deploying-new-versions-of-a-laravel-app-with-fabric/</id>
        <link href="https://matthewdaly.co.uk/blog/2016/09/05/deploying-new-versions-of-a-laravel-app-with-fabric/">
        </link>
        <updated>2016-09-05T21:22:16Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://laravel.com/docs/5.3/envoy">Envoy</a> is the official way to run tasks on a remote server for Laravel apps. A typical Envoy task for deploying a new version might look like this:</p>
<pre><code class="hljs lang-blade"><table><tr><td class="linenos" data-pseudo-content="1"></td><td><span class="hljs-variable">@servers</span>([<span class="hljs-string">'web'</span> =&gt; <span class="hljs-string">'matthew@server1.example.com'</span>])</td><tr><td class="linenos" data-pseudo-content="2"></td><td></td><tr><td class="linenos" data-pseudo-content="3"></td><td><span class="hljs-variable">@task</span>(<span class="hljs-string">'deploy'</span>, [<span class="hljs-string">'on'</span> =&gt; <span class="hljs-string">'web'</span>])</td><tr><td class="linenos" data-pseudo-content="4"></td><td>    cd /var/www</td><tr><td class="linenos" data-pseudo-content="5"></td><td>    sudo chown -R <span class="hljs-attribute">matthew</span>:matthew .</td><tr><td class="linenos" data-pseudo-content="6"></td><td>    git pull origin master</td><tr><td class="linenos" data-pseudo-content="7"></td><td>    php artisan migrate</td><tr><td class="linenos" data-pseudo-content="8"></td><td>    php artisan <span class="hljs-attribute">view</span>:clear</td><tr><td class="linenos" data-pseudo-content="9"></td><td>    composer dump-autoload</td><tr><td class="linenos" data-pseudo-content="10"></td><td>    sudo chown -R <span class="hljs-attribute">www-data</span>:www-data .</td><tr><td class="linenos" data-pseudo-content="11"></td><td>    sudo supervisorctl restart mail-queue</td><tr><td class="linenos" data-pseudo-content="12"></td><td><span class="hljs-variable">@endtask</span></td></table></code></pre>
<p>This would be defined in <code>Envoy.blade.php</code>. With this in place, and Envoy set up globally, you can then run <code>envoy run deploy</code> to run the <code>deploy</code> command.</p>
<p>However, Envoy requires the PHP SSH library, which I haven’t been able to get working with PHP 7. Fortunately I was already familiar with <a href="http://www.fabfile.org/">Fabric</a>, which makes an excellent alternative as long as you don’t mind writing the task in Python.</p>
<p>The same kind of task might look like this in a Fabric script, saved as <code>fabfile.py</code>:</p>
<pre><code class="hljs lang-python"><table><tr><td class="linenos" data-pseudo-content="1"></td><td><span class="hljs-comment">#!/usr/bin/env python</span></td><tr><td class="linenos" data-pseudo-content="2"></td><td><span class="hljs-keyword">from</span> fabric.api <span class="hljs-keyword">import</span> local, env, run, sudo</td><tr><td class="linenos" data-pseudo-content="3"></td><td><span class="hljs-keyword">from</span> fabric.context_managers <span class="hljs-keyword">import</span> cd, prefix</td><tr><td class="linenos" data-pseudo-content="4"></td><td></td><tr><td class="linenos" data-pseudo-content="5"></td><td>env.hosts = [<span class="hljs-string">'server1.example.com'</span>]</td><tr><td class="linenos" data-pseudo-content="6"></td><td>env.path = <span class="hljs-string">"/var/www"</span></td><tr><td class="linenos" data-pseudo-content="7"></td><td>env.user = <span class="hljs-string">"matthew"</span></td><tr><td class="linenos" data-pseudo-content="8"></td><td>env.password = <span class="hljs-string">"password"</span></td><tr><td class="linenos" data-pseudo-content="9"></td><td><span class="hljs-comment"># Or...</span></td><tr><td class="linenos" data-pseudo-content="10"></td><td>env.key_filename = <span class="hljs-string">'/path/to/ssh/key'</span></td><tr><td class="linenos" data-pseudo-content="11"></td><td></td><tr><td class="linenos" data-pseudo-content="12"></td><td><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deploy</span><span class="hljs-params">()</span>:</span></td><tr><td class="linenos" data-pseudo-content="13"></td><td>    <span class="hljs-string">"""</td><tr><td class="linenos" data-pseudo-content="14"></td><td>    Deploy the latest version</td><tr><td class="linenos" data-pseudo-content="15"></td><td>    """</span></td><tr><td class="linenos" data-pseudo-content="16"></td><td>    <span class="hljs-comment"># Push changes to Bitbucket</span></td><tr><td class="linenos" data-pseudo-content="17"></td><td>    local(<span class="hljs-string">"git push origin master"</span>)</td><tr><td class="linenos" data-pseudo-content="18"></td><td></td><tr><td class="linenos" data-pseudo-content="19"></td><td>    <span class="hljs-comment"># Switch to project directory</span></td><tr><td class="linenos" data-pseudo-content="20"></td><td>    <span class="hljs-keyword">with</span> cd(env.path):</td><tr><td class="linenos" data-pseudo-content="21"></td><td>        <span class="hljs-comment"># Change owner</span></td><tr><td class="linenos" data-pseudo-content="22"></td><td>        sudo(<span class="hljs-string">'chown -R matthew:matthew .'</span>)</td><tr><td class="linenos" data-pseudo-content="23"></td><td></td><tr><td class="linenos" data-pseudo-content="24"></td><td>        <span class="hljs-comment"># Pull changes to server</span></td><tr><td class="linenos" data-pseudo-content="25"></td><td>        run(<span class="hljs-string">'git pull origin master'</span>)</td><tr><td class="linenos" data-pseudo-content="26"></td><td></td><tr><td class="linenos" data-pseudo-content="27"></td><td>        <span class="hljs-comment"># Run migrations</span></td><tr><td class="linenos" data-pseudo-content="28"></td><td>        run(<span class="hljs-string">'php artisan migrate'</span>)</td><tr><td class="linenos" data-pseudo-content="29"></td><td></td><tr><td class="linenos" data-pseudo-content="30"></td><td>        <span class="hljs-comment"># Clear cached files</span></td><tr><td class="linenos" data-pseudo-content="31"></td><td>        run(<span class="hljs-string">'php artisan view:clear'</span>)</td><tr><td class="linenos" data-pseudo-content="32"></td><td>        run(<span class="hljs-string">'composer dump-autoload'</span>)</td><tr><td class="linenos" data-pseudo-content="33"></td><td></td><tr><td class="linenos" data-pseudo-content="34"></td><td>        <span class="hljs-comment"># Change owner back</span></td><tr><td class="linenos" data-pseudo-content="35"></td><td>        sudo(<span class="hljs-string">'chown -R www-data:www-data .'</span>)</td><tr><td class="linenos" data-pseudo-content="36"></td><td></td><tr><td class="linenos" data-pseudo-content="37"></td><td>        <span class="hljs-comment"># restart mail queue</span></td><tr><td class="linenos" data-pseudo-content="38"></td><td>        sudo(<span class="hljs-string">'supervisorctl restart mail-queue'</span>)</td></table></code></pre>
<p>Then, assuming Fabric is already installed locally, you can run <code>fab deploy</code> to push up the latest revision.</p>
<p>Either of these solutions will do a fine job of deploying your app. If you do need to store user-specific data in your Fabric script, it’s probably prudent to keep it out of version control.</p>
<p>Whichever way you choose, it’s a really good idea to do what you can to automate deployment. It can be a boring, repetitive job, and both of these solutions make it much easier.</p>
]]></summary>
    </entry>
</feed>